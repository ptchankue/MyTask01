!function(){"use strict";var a=angular.module("contractRequestAppApp",["ngRoute","ngResource","formly","formlyBootstrap"]);a.constant("_",window._),a.constant("is",window.is),a.config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/no_customer.html"}).when("/customer/:taskId",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/gettask/:taskId",{templateUrl:"views/gettask.html",controller:"GettaskCtrl",controllerAs:"gettask"}).otherwise({redirectTo:"/"})}]),a.config(["formlyConfigProvider",function(a){a.setWrapper([{template:["<formly-transclude></formly-transclude>",'<div class="form-group has-error" ng-messages="fc.$error" ng-if="options.formControl.$invalid && options.formControl.$touched">','  <span class="help-block" ng-message="{{::name}}" ng-repeat="(name, message) in ::options.validation.messages">',"    {{message(fc.$viewValue, fc.$modelValue, this)}}","  </span>","</div>"].join(" ")}])}]),a.run(["formlyValidationMessages",function(a){a.addStringMessage("required","This field is required")}])}(),angular.module("contractRequestAppApp").controller("MainCtrl",["$scope","$routeParams","TaskService","CustomerService","FulfillmentForm","RoutingService",function(a,b,c,d,e,f){function g(a){var b=a.Task.TaskData.ServiceRequestMaster,c=a.Task.TaskData.ComplaintsBusinessData,d=a.Task.TaskData.ContractRequestBusinessData&&a.Task.TaskData.ContractRequestBusinessData.request||"{}",e={request:d},g={ServiceRequestMaster:b,ComplaintsBusinessData:c,ContractRequestBusinessData:e},h=JSON.stringify(g),i={request:h};f.Routing.save(i,function(a,b,c){j.fulfillment?j.setStatusMessage("Task complete","success"):_.isEmpty(d.archives)?j.setStatusMessage("Contract Request fulfilled successfully â€“ THN11 notifications to be sent","success"):j.setStatusMessage("This request has successfully been directed to fulfillment","success")},function(a,b){j.setStatusMessage("Could not perfrom routing due to the following error: "+b,"danger")})}function h(a){c.setTaskData(a),j.customerId=a.Task.TaskData.ServiceRequestMaster.customerNumber,j.activityNumber=a.Task.TaskData.ServiceRequestMaster.activityReferenceNumber}function i(a,b){d.Customer.get({id:a},function(a){return b.Task.TaskData.ContractRequestBusinessData.request.customer=a,h(b)})}var j=this;j.taskId=b.taskId,j.modalMessage={},j.taskParams={id:j.taskId},j.taskInfo=c.Tasks.get(j.taskParams,function(a){var b=JSON.parse(a.Task.TaskData.ContractRequestBusinessData&&a.Task.TaskData.ContractRequestBusinessData.request||"{}"),c=a.Task.TaskData.ServiceRequestMaster.customerNumber,d=(a.Task.TaskData.ServiceRequestMaster.activityReferenceNumber,a.Task.TaskData.ServiceRequestMaster.serviceRequestType);"CONTF"===d&&(j.fulfillment=!0,b.fulfillment=!0,j.formModel=e.getForm()),_.isEmpty(b)||(b.fulfillment=!0),a.Task.TaskData.ContractRequestBusinessData.request=b;var f=a.Task.TaskData.ContractRequestBusinessData.request.customer;return void 0===f?i(c,a):h(a)}),j.return=function(){},j.setStatusMessage=function(b,c){a.$apply(function(){a.main.modalMessage={message:b,status:c}})},j.updateTaskData=function(){var a=c.getTaskData(),b=a.Task.TaskData.ContractRequestBusinessData.request,d=!_.isEmpty(b.sendContractAction);if(!d)return j.statusMessage="Please perform an action";a.Task.TaskData.ContractRequestBusinessData={},a.Task.TaskData.ContractRequestBusinessData.request=JSON.stringify(b),a.Task.TaskData.ServiceRequestMaster.serviceRequestType="CONTF",_.isEmpty(b.archives)&&(a.Task.TaskInfo.status="completed");var e=JSON.stringify(a),f={request:e};c.update.save(j.taskId,f,function(b){g(a)})},j.updateFulfillmentTaskData=function(){var a=c.getTaskData(),b=j.formModel,d=a.Task.TaskData.ContractRequestBusinessData.request;d.fulfillmentOutcome={outcome:b.outcome},a.Task.TaskInfo.status="completed",_.isEmpty(b.declineReason)||(d.fulfillmentOutcome.declineReason=b.declineReason);var e=JSON.stringify(a),f={request:e};c.update.save(j.taskId,f,function(b){g(a)})}}]),angular.module("contractRequestAppApp").service("accountservice",["$resource","Settings",function(a,b){var c=b.ACCOUNTSERVICE_URL+"/loanAccounts/search/findByClientNumber",d=a(c),e=b.ACCOUNTSERVICE_URL+"/cardAccounts/search/findByClientNumber",f=a(e),g=b.ACCOUNTSERVICE_URL+"/investmentAccounts/search/findByClientNumber",h=a(g);return{LoanAccounts:d,CardAccounts:f,InvestmentAccounts:h}}]),angular.module("contractRequestAppApp").factory("CustomerService",["$resource","Settings",function(a,b){var c=b.CUSTOMERSERVICE_URL+"/customers/:id",d=a(c,{id:"@id"});return{Customer:d}}]),angular.module("contractRequestAppApp").service("Settings",function(){var a={TASKSERVICE_URL:"http://mdwgd1is1:5556",LEADSERVICE_URL:"http://api.africanbank.net/leadservice",CUSTOMERSERVICE_URL:"http://api.africanbank.net/customerservice",USERSERVICE_URL:"http://api.africanbank.net/userservice",ACCOUNTSERVICE_URL:"http://api.africanbank.net/accountservice",CONTRACTSERVICE_URL:"http://mdwgd1is1:5555/rest/DevPlayGroundPackage/Patrick/common/contract_request"};return a}),angular.module("contractRequestAppApp").directive("customerDetails",function(){return{templateUrl:"views/directives/customerdetails.html",restrict:"E",scope:{customerId:"=customerId",activityNumber:"=activityNumber"},controllerAs:"customerCntl",controller:["$scope","TaskService",function(a,b){var c=this;a.$watch("customerId",function(d){if(void 0!==d){c.customerId=a.customerId;var e=b.getTaskData(),f=e.Task.TaskData.ContractRequestBusinessData.request.customer;return c.customer=f}}),a.$watch("activityNumber",function(b){void 0!==b&&(c.activityNumber=a.activityNumber)})}]}}),angular.module("contractRequestAppApp").directive("customerAccounts",function(){return{templateUrl:"views/directives/customeraccounts.html",restrict:"E",scope:{customerId:"=customerId",activityNumber:"=activityNumber"},controllerAs:"accountsCntrl",controller:["$scope","accountservice","ContractService","CustomerService","EmailingService","ContractArchiveService","TaskService",function(a,b,c,d,e,f,g){function h(){g.setTaskData(m.taskData)}function i(a){var c={clientNumber:m.customerId},d={loanAccounts:{module:"LoanAccounts",key:"loanReference"},cardAccounts:{module:"CardAccounts",key:"accountreference"},investmentAccounts:{module:"InvestmentAccounts",key:"accountReference"}},e=d[a].module,f=d[a].key;return b[e].get(c,function(b){_.each(b._embedded[a],function(a){var b=a[f].split(" ").join("");m.contracts[b]="loading",m.taskDataToPersist.contracts[b]="loading",h()})})}function j(){var a=(m.sendContractAction.action,m.activityNumber),b=m.sendContractAction.contract,c=m.sendContractAction.account,d=m.sendContractAction.channel,f=(c.hasOwnProperty("accountReference")?c.accountReference:c.hasOwnProperty("accountreference")?c.accountreference:c.loanReference).split(" ").join(""),g=m.sendContractAction.destination,i=b.indexNo,j=b.pageNo,k=b.businessDocumentType;e.SendEmail(d,a,f,m.customerId,g,i,j,k).then(function(a){var c=a.data.serviceHeaderResponse.resultCode,d=a.data.mediaResponses&&a.data.mediaResponses[0]&&a.data.mediaResponses[0].failureReason&&a.data.mediaResponses[0].failureReason[0].reasonCode,e=a.data.mediaResponses&&a.data.mediaResponses[0]&&a.data.mediaResponses[0].failureReason&&a.data.mediaResponses[0].failureReason[0].reasonDescription;if("200"===c&&void 0===d&&void 0===e){m.setStatus("Email successfully send","success");var i={action:"Email",destination:g,result:"success"},j=_.find(m.taskDataToPersist.contracts[f],b);return j.actions.push(i),h(),m.sendContractAction={}}var i={action:"Email",destination:g,result:"fail"},j=_.find(m.taskDataToPersist.contracts[f],b);j.actions.push(i),h(),m.sendContractAction={};var k="Could not email contract: "+d+" - "+e;return m.showContractError(k)},function(a){var c={action:"Email",destination:g,result:"fail"},d=_.find(m.taskDataToPersist.contracts[f],b);return d.actions.push(c),h(),m.sendContractAction={},m.setStatus("Server error - could not send email","danger")})}function k(){var a=(m.sendContractAction.account,m.sendContractAction.contract),b={documentIndex:a.indexNo,pageNumber:a.pageNo,applicationType:"L"};c.DocumentDetail.get(b,function(b){if("true"===b.resultFound&&b.encodedFile&&"This page does not exist"!==b.encodedFile){window.open("data:application/pdf;base64,"+b.encodedFile);var c=_.find(m.taskDataToPersist.contracts[a.accountReference],a),d={action:"View",result:"success"};return c.actions.push(d),h(),m.sendContractAction={}}m.showContractError("Could not display contract");var c=_.find(m.taskDataToPersist.contracts[a.accountReference],a),d={action:"View",result:"fail"};c.actions.push(d),h()})}function l(){var a=(m.sendContractAction.action,m.activityNumber),b=m.sendContractAction.contract,c=m.sendContractAction.account,d=m.sendContractAction.channel,f=(c.hasOwnProperty("accountReference")?c.accountReference:c.hasOwnProperty("accountreference")?c.accountreference:c.loanReference).split(" ").join(""),g=m.sendContractAction.destination,i=m.sendContractAction.destinationAreaCode,j=b.indexNo,k=b.pageNo,l=b.businessDocumentType;e.SendFax(d,a,f,m.customerId,i,g,j,k,l).then(function(a){var c=a.data.serviceHeaderResponse.resultCode,d=a.data.mediaResponses&&a.data.mediaResponses[0]&&a.data.mediaResponses[0].failureReason&&a.data.mediaResponses[0].failureReason[0].reasonCode,e=a.data.mediaResponses&&a.data.mediaResponses[0]&&a.data.mediaResponses[0].failureReason&&a.data.mediaResponses[0].failureReason[0].reasonDescription;if("200"===c&&void 0===d&&void 0===e){m.setStatus("Fax successfully send","success");var i={action:"Fax",destination:g,result:"success"},j=_.find(m.taskDataToPersist.contracts[f],b);return j.actions.push(i),h(),m.sendContractAction={}}var i={action:"Fax",destination:g,result:"fail"},j=_.find(m.taskDataToPersist.contracts[f],b);j.actions.push(i),h(),m.sendContractAction={};var k="Could not fax contract: "+d+" - "+e;return m.showContractError(k)},function(a){var c={action:"Fax",destination:g,result:"fail"},d=_.find(m.taskDataToPersist.contracts[f],b);return d.actions.push(c),h(),m.sendContractAction={},m.setStatus("Server error - could not send fax","danger")})}var m=this;m.statusMessage=!1,m.statusMessageStatus="success",a.$watch("activityNumber",function(a){void 0!==a&&(m.activityNumber=a)}),a.$watch("customerId",function(a){if(void 0!==a){var b=g.getTaskData();m.customerId=a,m.customer=b.Task.TaskData.ContractRequestBusinessData.request.customer,m.taskDataToPersist=b.Task.TaskData.ContractRequestBusinessData.request,m.taskDataToPersist.loanAccounts=m.taskDataToPersist.loanAccounts||i("loanAccounts"),m.taskDataToPersist.cardAccounts=m.taskDataToPersist.cardAccounts||i("cardAccounts"),m.taskDataToPersist.investmentAccounts=m.taskDataToPersist.investmentAccounts||i("investmentAccounts"),m.loanAccounts=m.taskDataToPersist.loanAccounts,m.cardAccounts=m.taskDataToPersist.cardAccounts,m.investmentAccounts=m.taskDataToPersist.investmentAccounts,m.taskDataToPersist.contracts=m.taskDataToPersist.contracts||{},m.taskDataToPersist.archives=m.taskDataToPersist.archives||{},m.taskDataToPersist.requiresFetchFromMetrofile=m.taskDataToPersist.requiresFetchFromMetrofile||[],m.contracts=m.taskDataToPersist.contracts,m.archives=m.taskDataToPersist.archives,m.requiresFetchFromMetrofile=m.taskDataToPersist.requiresFetchFromMetrofile,m.fulfillment=b.Task.TaskData.ContractRequestBusinessData.request.fulfillment,m.taskData=b,h(),m.sendContractAction={}}}),m.sendContractViaSelectedMedia={email:j,view:k,fax:l},m.fetchContracts=function(a,b){"loading"===m.contracts[a]&&c.DocumentList.query({accountRef:a,applicationType:b},function(b){var c=_.filter(b,function(a,b,c){var d=_.where(c,{indexNo:a.indexNo});if(d.length>1){var e=d.length,f=parseInt(a.pageNo);return a.actions=[],e===f}return a.actions=[],!0});m.contracts[a]=c,m.taskDataToPersist.contracts[a]=c,m.taskDataToPersist.contracts[a].actions=[],h(),0===c.length&&(m.archives[a]="loading",m.showArchivesForAccount(a))})},m.setAction=function(a,b,c,d){m.sendContractAction.label=function(){var a=this.action,b=a.charAt(0).toUpperCase()+a.substr(1,a.length),c="Send "+b;return c},m.sendContractAction.contract=d,m.sendContractAction.account=b,m.sendContractAction.action=a;var e=_.find(m.taskDataToPersist[c]._embedded[c],b);return e.fulfillment=!0,m.taskDataToPersist.sendContractAction=m.sendContractAction,h(),"email"===a?(m.sendContractAction.destination=m.sendContractAction.destination||m.customer.emailAddress.split(" ").join(""),m.sendContractAction.channel="HOMEEMAIL",this):"fax"===a?(m.sendContractAction.destination=m.sendContractAction.destination||m.customer.faxNumber.split(" ").join(""),m.sendContractAction.destinationAreaCode=m.sendContractAction.destinationAreaCode||m.customer.faxAreaCode.split(" ").join(""),m.sendContractAction.channel="FAX",this):m.sendContractViaSelectedMedia[a]()},m.showArchivesForAccount=function(a){var b={loanReference:a};f.ArchiveList.get(b,function(b){_.each(b._embedded.documents,function(a){a.selected=!1}),m.archives[a]=b._embedded.documents,m.taskDataToPersist.archives[a]=b._embedded.documents,h()})},m.showContractError=function(a){m.setStatus(a,"danger")},m.addToArchiveRequest=function(a){a.selected?m.requiresFetchFromMetrofile.push(a):m.requiresFetchFromMetrofile=_.reject(m.requiresFetchFromMetrofile,function(b){return b===a}),m.taskDataToPersist.requiresFetchFromMetrofile=m.requiresFetchFromMetrofile,h()},m.setStatus=function(b,c){a.$parent.main.modalMessage={message:b,status:c}}}]}}),angular.module("contractRequestAppApp").service("ContractService",["$resource","Settings",function(a,b){var c=b.CONTRACTSERVICE_URL+"/get_document/:accountRef",d=a(c),e=b.CONTRACTSERVICE_URL+"/get_doc_by_index/:documentIndex",f=a(e);return{DocumentList:d,DocumentDetail:f}}]),angular.module("contractRequestAppApp").service("EmailingService",["$http","$httpParamSerializerJQLike",function(a,b){var c="http://mdwgd1is1:5555/rest/DevPlayGroundPackage/Patrick/common/contract_request/facilitate_media",d={SendEmail:function(d,e,f,g,h,i,j,k){return a({method:"POST",url:c,headers:{"Content-Type":"application/x-www-form-urlencoded"},data:b({request:'{"accounReference":"'+f+'","accountType":"L","documentType":"GENERIC","systemType":"AM","isPersist":"N","customerNumber":"'+g+'","contactDetails":[{"identifier":"'+d+'","channel":"'+d+'","contryCode":"","areaCode":"","emailAddress":"'+h+'","telephoneNumber":""}],"notification":{"serviceRequestType":"COMPLAIA","actvityReferenceNumber":"'+e+'"},"keyValue":[{"key":"RETRIEVEFROMSYBRIN","value":"Y"},{"key":"INDNO","value":"'+i+'"},{"key":"PAGENO","value":"'+j+'"},{"key":"SYBRINFILENAME","value":"'+k+'"},{"key":"CLIENTNUMBER","value":"'+g+'"}]}'})})},SendFax:function(d,e,f,g,h,i,j,k,l){return a({method:"POST",url:c,headers:{"Content-Type":"application/x-www-form-urlencoded"},data:b({request:'{"accounReference":"'+f+'","accountType":"L","documentType":"GENERIC","systemType":"AM","isPersist":"N","customerNumber":"'+g+'","contactDetails":[{"identifier":"'+d+'","channel":"'+d+'","contryCode":"","areaCode":"'+h+'","emailAddress":"","telephoneNumber":"'+i+'"}],"notification":{"serviceRequestType":"COMPLAIA","actvityReferenceNumber":"'+e+'"},"keyValue":[{"key":"RETRIEVEFROMSYBRIN","value":"Y"},{"key":"INDNO","value":"'+j+'"},{"key":"PAGENO","value":"'+k+'"},{"key":"SYBRINFILENAME","value":"'+l+'"},{"key":"CLIENTNUMBER","value":"'+g+'"}]}'})})}};return{SendEmail:d.SendEmail,SendFax:d.SendFax}}]),angular.module("contractRequestAppApp").service("ContractArchiveService",["$resource","Settings",function(a,b){var c=b.CUSTOMERSERVICE_URL+"/documents/search/findByloanReference",d=a(c),e=b.CUSTOMERSERVICE_URL+"/documents/:barCode",f=a(e);return{ArchiveList:d,ArchiveDetail:f}}]),angular.module("contractRequestAppApp").factory("TaskService",["$resource","Settings",function(a,b){function c(a){return this.taskData=a}function d(){return this.taskData}this.taskData={};var e=b.TASKSERVICE_URL+"/rest/RestIsBest/common/formFlow/:id",f=b.TASKSERVICE_URL+"/rest/RestIsBest/common/task/:id",g=b.TASKSERVICE_URL+"/rest/RestIsBest/common/process",h=a(e,{get:{method:"GET"}}),i=a(f,{id:"@id"},{get:{method:"GET",data:!1},query:{method:"GET",data:!1},save:{method:"POST"},update:{method:"PUT",data:!1},delete:{method:"DELETE"}}),j={save:function(a,c,d,e){$.ajax({type:"POST",url:b.TASKSERVICE_URL+"/rest/RestIsBest/common/task/"+a,contentType:"application/x-www-form-urlencoded;charset=UTF-8",data:c,success:d,error:e})}},k={save:function(a,b,c){$.ajax({type:"POST",url:g,data:a,success:b,error:c})}};return{Trigger:k,Tasks:i,formflow:h,update:j,setTaskData:c,getTaskData:d}}]),angular.module("contractRequestAppApp").controller("GettaskCtrl",["$scope","$routeParams","TaskService",function(a,b,c){var d=this;d.taskId=b.taskId,d.taskInfo={};var e={id:this.taskId};c.Tasks.get(e,function(a){console.log(a),d.taskInfo=a})}]),angular.module("contractRequestAppApp").directive("notes",function(){return{templateUrl:"views/directives/notes.html",restrict:"E",controllerAs:"notesCntl",controller:["$scope","CustomerService",function(a,b){var c=this;c.setModalContext=function(a){}}]}}),angular.module("contractRequestAppApp").service("NotesService",function(){var a={account:[{timestamp:"20160728 10:59",user:"Andre du Toit",note:"This is a note"}],customer:[]},b={get:function(b){return a[b]},saveNote:function(b,c){return a[b].push(c)}};return{Notes:b}}),angular.module("contractRequestAppApp").service("FulfillmentForm",["formlyValidationMessages","is",function(a,b){var c={},d=[{name:"Accept",value:"Accept"},{name:"Decline",value:"Decline"}];c.fields=[{key:"outcome",type:"select",templateOptions:{options:d,label:"Outcome",required:!0}},{key:"declineReason",type:"textarea",templateOptions:{type:"text",label:"Decline Reason",placeholder:"Decline Reason",required:!0},hideExpression:'model.outcome !== "Decline"'}];var e={};return e.getForm=function(){return c},e}]),angular.module("contractRequestAppApp").service("RoutingService",["$resource","Settings",function(a,b){var c=b.TASKSERVICE_URL+"/rest/ContractRequest/Rest/taskRouting",d={save:function(a,b,d){$.ajax({type:"POST",url:c,contentType:"application/x-www-form-urlencoded;charset=UTF-8",data:a,success:b,error:d})}};return{Routing:d}}]),angular.module("contractRequestAppApp").directive("taskModal",function(){return{templateUrl:"views/directives/taskmodal.html",restrict:"E",scope:{modalMessage:"="},controllerAs:"taskModalCntl",link:function(a,b,c,d){b.children("#taskModal").on("hidden.bs.modal",function(b){a.$parent.main.setStatusMessage("","")})},controller:["$scope",function(a){var b=this;a.$watch("modalMessage",function(a){_.isEmpty(a)||""===a.message||""===a.status||(b.modalMessage=a,angular.element("#taskModal").modal("show"))})}]}}),angular.module("contractRequestAppApp").run(["$templateCache",function(a){"use strict";a.put("views/directives/customeraccounts.html",'<div ng-show="accountsCntrl.statusMessage" class="alert alert-{{accountsCntrl.statusMessageStatus}}">{{accountsCntrl.statusMessage}}</div> <h3>Loan Accounts</h3> <div class="panel-group" id="accordion-loan" role="tablist" aria-multiselectable="true"> <div ng-show="!accountsCntrl.loanAccounts._embedded.loanAccounts.length" class="alert alert-info">No Loan accounts for this customer</div> <div ng-repeat="account in accountsCntrl.loanAccounts._embedded.loanAccounts" class="panel panel-default"> <div ng-class="{\'panel-show-border\':accountsCntrl.fulfillment && account.fulfillment, \'panel-heading\':true}" role="tab" id="panel-loan-{{$index}}" ng-click="accountsCntrl.fetchContracts(account.loanReference.split(\' \').join(\'\'), \'L\')"> <h4 class="panel-title" data-toggle="collapse" data-parent="#accordion-loan, #accordion-card, #accordion-invest" data-target="#collapse-loan-{{$index}}" aria-expanded="true" aria-controls="collapse-loan-{{$index}}"> <span class="badge pull-right">{{account.status}}</span> {{account.loanReference}} - Loan Account </h4> </div> <div id="collapse-loan-{{$index}}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="collapse-loan-{{$index}}"> <div class="panel-body"> <table class="table table-striped" ng-hide="!accountsCntrl.contracts[account.loanReference.split(\' \').join(\'\')].length || accountsCntrl.contracts[account.loanReference.split(\' \').join(\'\')] === \'loading\'"> <tr> <th>Contract Name</th> <th>Action</th> </tr> <tr ng-repeat="contract in accountsCntrl.contracts[account.loanReference.split(\' \').join(\'\')]"> <td> {{contract.businessDocumentType}} <div ng-repeat="action in contract.actions" ng-show="accountsCntrl.fulfillment"> <span ng-class="{\'text-danger\': action.result == \'fail\', \'text-success\': action.result == \'success\'}"> Contract {{action.action}} <span ng-show="action.destination">({{action.destination}})</span> - {{action.result}} </span> </div> </td> <td> <button ng-click="accountsCntrl.setAction(\'view\', account, \'loanAccounts\', contract)" class="btn btn-mini" ng-disabled="accountsCntrl.fulfillment">View</button> <button ng-click="accountsCntrl.setAction(\'email\', account, \'loanAccounts\', contract)" data-toggle="modal" ng-disabled="accountsCntrl.fulfillment" data-target="#send-modal" class="btn btn-mini">Email</button> <button ng-click="accountsCntrl.setAction(\'fax\', account, \'loanAccounts\', contract)" data-toggle="modal" data-target="#send-modal" ng-disabled="accountsCntrl.fulfillment" class="btn btn-mini">Fax</button> </td> </tr> </table> <div ng-show="!accountsCntrl.contracts[account.loanReference.split(\' \').join(\'\')].length" class="alert alert-info">No contracts for this account on record</div> <div ng-show="accountsCntrl.contracts[account.loanReference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Contracts...</div> <div ng-show="accountsCntrl.archives[account.loanReference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Archives...</div> <div ng-show="accountsCntrl.archives[account.loanReference.split(\' \').join(\'\')].length > 0"> <p>Select which contracts you would like request from archive:</p> <div class="checkbox" ng-repeat="archive in accountsCntrl.archives[account.loanReference.split(\' \').join(\'\')]"> <label> <input type="checkbox" ng-click="accountsCntrl.addToArchiveRequest(archive)" ng-model="archive.selected" ng-disabled="accountsCntrl.fulfillment"> <strong>Document Type:</strong> {{archive.documentType}} </label> <hr> </div> </div> </div> </div> </div> </div> <h3>Card Accounts</h3> <div class="panel-group" id="accordion-card" role="tablist" aria-multiselectable="true"> <div ng-show="!accountsCntrl.cardAccounts._embedded.cardAccounts.length" class="alert alert-info">No Card accounts for this customer</div> <div ng-repeat="account in accountsCntrl.cardAccounts._embedded.cardAccounts" class="panel panel-default"> <div ng-class="{\'panel-show-border\':accountsCntrl.fulfillment && account.fulfillment == true, \'panel-heading\':true}" role="tab" id="panel-card-{{$index}}" ng-click="accountsCntrl.fetchContracts(account.accountreference.split(\' \').join(\'\'), \'L\')"> <h4 class="panel-title" data-toggle="collapse" data-parent="#accordion-loan, #accordion-card, #accordion-invest" data-target="#collapse-card-{{$index}}" aria-expanded="true" aria-controls="collapse-card-{{$index}}"> <span class="badge pull-right">{{account.status}}</span> {{account.accountreference}} - Card Account </h4> </div> <div id="collapse-card-{{$index}}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="collapse-card-{{$index}}"> <div class="panel-body"> <table class="table table-striped" ng-hide="!accountsCntrl.contracts[account.accountreference.split(\' \').join(\'\')].length || accountsCntrl.contracts[account.accountreference.split(\' \').join(\'\')] === \'loading\'"> <tr> <th>Contract Name</th> <th>Action</th> </tr> <tr ng-repeat="contract in accountsCntrl.contracts[account.accountreference.split(\' \').join(\'\')]"> <td> {{contract.businessDocumentType}} <div ng-repeat="action in contract.actions" ng-show="accountsCntrl.fulfillment"> <span ng-class="{\'text-danger\': action.result == \'fail\', \'text-success\': action.result == \'success\'}"> Contract {{action.action}} <span ng-show="action.destination">({{action.destination}})</span> - {{action.result}} </span> </div> </td> <td> <button ng-click="accountsCntrl.setAction(\'view\', account, \'cardAccounts\', contract)" class="btn btn-mini" ng-disabled="accountsCntrl.fulfillment">View</button> <button ng-click="accountsCntrl.setAction(\'email\', account, \'cardAccounts\', contract)" data-toggle="modal" data-target="#send-modal" ng-disabled="accountsCntrl.fulfillment" class="btn btn-mini">Email</button> <button ng-click="accountsCntrl.setAction(\'fax\', account, \'cardAccounts\', contract)" data-toggle="modal" data-target="#send-modal" ng-disabled="accountsCntrl.fulfillment" class="btn btn-mini">Fax</button> </td> </tr> </table> <div ng-show="!accountsCntrl.contracts[account.accountreference.split(\' \').join(\'\')].length" class="alert alert-info">No contracts for this account</div> <div ng-show="accountsCntrl.contracts[account.accountreference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Contracts...</div> <div ng-show="accountsCntrl.archives[account.accountreference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Archives...</div> <div ng-show="accountsCntrl.archives[account.accountreference.split(\' \').join(\'\')].length > 0"> <p>Select which contracts you would like request from archive:</p> <div class="checkbox" ng-repeat="archive in accountsCntrl.archives[account.accountreference.split(\' \').join(\'\')]"> <label> <input type="checkbox" ng-click="accountsCntrl.addToArchiveRequest(archive)" ng-model="archive.selected" ng-disabled="accountsCntrl.fulfillment"> <strong>Document Type:</strong> {{archive.documentType}} </label> <hr> </div> </div> </div> </div> </div> </div> <h3>Investment Accounts</h3> <div class="panel-group" id="accordion-invest" role="tablist" aria-multiselectable="true"> <div ng-show="!accountsCntrl.investmentAccounts._embedded.investmentAccounts.length" class="alert alert-info">No Investment accounts for this customer</div> <div ng-repeat="account in accountsCntrl.investmentAccounts._embedded.investmentAccounts" class="panel panel-default"> <div ng-class="{\'panel-show-border\':accountsCntrl.fulfillment && account.fulfillment == true, \'panel-heading\':true}" role="tab" id="panel-investment-{{$index}}" ng-click="accountsCntrl.fetchContracts(account.accountReference.split(\' \').join(\'\'), \'L\')"> <h4 class="panel-title" data-toggle="collapse" data-parent="#accordion-loan, #accordion-card, #accordion-invest" data-target="#collapse-investment-{{$index}}" aria-expanded="true" aria-controls="collapse-investment-{{$index}}"> <span class="badge pull-right">{{account.status}}</span> {{account.accountReference}} - Card Account </h4> </div> <div id="collapse-investment-{{$index}}" class="panel-collapse collapse" role="tabpanel" aria-labelledby="collapse-investment-{{$index}}"> <div class="panel-body"> <table class="table table-striped" ng-hide="!accountsCntrl.contracts[account.accountReference.split(\' \').join(\'\')].length || accountsCntrl.contracts[account.accountReference.split(\' \').join(\'\')] === \'loading\'"> <tr> <th>Contract Name</th> <th>Action</th> </tr> <tr ng-repeat="contract in accountsCntrl.contracts[account.accountReference.split(\' \').join(\'\')]"> <td> {{contract.businessDocumentType}} <div ng-repeat="action in contract.actions" ng-show="accountsCntrl.fulfillment"> <span ng-class="{\'text-danger\': action.result == \'fail\', \'text-success\': action.result == \'success\'}"> Contract {{action.action}} <span ng-show="action.destination">({{action.destination}})</span> - {{action.result}} </span> </div> </td> <td> <button ng-click="accountsCntrl.setAction(\'view\', account, \'investmentAccounts\', contract)" class="btn btn-mini" ng-disabled="accountsCntrl.fulfillment">View</button> <button ng-click="accountsCntrl.setAction(\'email\', account, \'investmentAccounts\', contract)" data-toggle="modal" data-target="#send-modal" class="btn btn-mini" ng-disabled="accountsCntrl.fulfillment">Email</button> <button ng-click="accountsCntrl.setAction(\'fax\', account, \'investmentAccounts\', contract)" data-toggle="modal" data-target="#send-modal" ng-disabled="accountsCntrl.fulfillment" class="btn btn-mini">Fax</button> </td> </tr> </table> <div ng-show="!accountsCntrl.contracts[account.accountReference.split(\' \').join(\'\')].length" class="alert alert-info">No contracts for this account</div> <div ng-show="accountsCntrl.contracts[account.accountReference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Contracts...</div> <div ng-show="accountsCntrl.archives[account.accountReference.split(\' \').join(\'\')] === \'loading\'" class="alert alert-info">Loading Archives...</div> <div ng-show="accountsCntrl.archives[account.accountReference.split(\' \').join(\'\')].length > 0"> <p>Select which contracts you would like request from archive:</p> <div class="checkbox" ng-repeat="archive in accountsCntrl.archives[account.accountReference.split(\' \').join(\'\')]"> <label> <input type="checkbox" ng-click="accountsCntrl.addToArchiveRequest(archive)" ng-model="archive.selected" ng-disabled="accountsCntrl.fulfillment"> <strong>Document Type:</strong> {{archive.documentType}} </label> <hr> </div> </div> </div> </div> </div> </div> <div class="modal fade" tabindex="-1" role="dialog" id="send-modal"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Confirm and send</h4> </div> <div class="modal-body"> <form class="form-inline"> <div class="form-group" ng-show="accountsCntrl.sendContractAction.action === \'email\'"> <label for="email">Email Address</label> <div class="input-group"> <input type="text" class="form-control" ng-model="accountsCntrl.sendContractAction.destination" id="email"> </div> </div> <div class="form-group" ng-show="accountsCntrl.sendContractAction.action === \'fax\'"> <label for="fax">Area Code</label> <div class="input-group col-xs-2"> <input type="text" class="form-control" maxlength="3" ng-model="accountsCntrl.sendContractAction.destinationAreaCode" id="faxArea"> </div> <label for="fax">Fax Number</label> <div class="input-group"> <input type="text" class="form-control" ng-model="accountsCntrl.sendContractAction.destination" id="fax"> </div> </div> </form> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button> <button type="button" class="btn btn-primary" data-dismiss="modal" ng-click="accountsCntrl.sendContractViaSelectedMedia[accountsCntrl.sendContractAction.action]()">{{accountsCntrl.sendContractAction.label()}}</button> </div> </div><!-- /.modal-content --> </div><!-- /.modal-dialog --> </div><!-- /.modal -->'),a.put("views/directives/customerdetails.html",'<h3>{{customerCntl.customer.firstName}} {{customerCntl.customer.surname}}</h3> <table class="table table-striped table-bordered"> <thead> <tr> <th>Activity number:</th> <th>Client number</th> <th>ID Number</th> <th>Title</th> <th>First name</th> <th>Surname</th> </tr> </thead> <tr> <td>{{customerCntl.customerId}}</td> <td>{{customerCntl.activityNumber}}</td> <td>{{customerCntl.customer.idNumber||"n/a"}}</td> <td>{{customerCntl.customer.title||"n/a"}}</td> <td>{{customerCntl.customer.firstName||"n/a"}}</td> <td>{{customerCntl.customer.surname||"n/a"}}</td> </tr> </table>'),a.put("views/directives/notes.html",'<button class="btn btn-primary" data-toggle="modal" data-target="#notes-modal" ng-click="notesCntl.setModalContext(\'Account\')">Notes</button> <div class="modal fade" tabindex="-1" role="dialog" id="notes-modal"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Add or View Notes</h4> </div> <div class="modal-body"> <div class="panel panel-default"> <div class="panel-body"> <h4>Account Notes</h4> <table class="table table-striped table-bordered"> <thead> <tr> <th>Note Time Stamp</th> <th>User</th> <th>Note</th> </tr> </thead> <tr> <td></td> <td></td> <td></td> </tr> </table> <button class="btn btn-primary">More</button> </div> </div> <div class="panel panel-default"> <div class="panel-body"> <h4>Add Account Notes</h4> <div class="form-group"> <textarea class="form-control" id="note"></textarea> </div> <button class="btn btn-primary">Save Note</button> <button class="btn btn-danger">Clear Note</button> </div> </div> </div> <div class="modal-footer"> <button type="button" class="btn btn-primary pull-right" data-dismiss="modal" ng-click="notesCntl.DismissModal()">Done</button> </div> </div> </div> </div>'),
a.put("views/directives/taskmodal.html",'<div class="modal fade" tabindex="-1" role="dialog" id="taskModal"> <div class="modal-dialog"> <div class="modal-content"> <div class="modal-header"> <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> <h4 class="modal-title">Task complete</h4> </div> <div class="modal-body"> <div class="alert alert-{{taskModalCntl.modalMessage.status}}" role="alert"> <p>{{taskModalCntl.modalMessage.message}}</p> </div> </div> <div class="modal-footer"> <button type="button" class="btn btn-default" data-dismiss="modal">Ok</button> </div> </div><!-- /.modal-content --> </div><!-- /.modal-dialog --> </div><!-- /.modal -->'),a.put("views/gettask.html",'<h2 class="page-heading">Get Task info</h2> <div class="container"> <p>Get taks data for {{gettask.taskId}}</p> <p><strong>Task Info Below:</strong></p> <p>{{gettask.taskInfo}}</p> </div>'),a.put("views/main.html",'<h2 class="page-heading">Request a copy of original contract</h2> <div class="container"> <customer-details customer-id="main.customerId" activity-number="main.activityNumber"></customer-details> <customer-accounts customer-id="main.customerId" activity-number="main.activityNumber"></customer-accounts> <task-modal modal-message="main.modalMessage"></task-modal> <hr> <div ng-show="main.fulfillment"> <h3>Outcome</h3> <form novalidate name="main.form"> <formly-form model="main.formModel" fields="main.formModel.fields" form="main.formModel.form"> <button ng-click="main.updateFulfillmentTaskData()" ng-disabled="main.form.$invalid" type="submit" class="btn btn-primary pull-right">Continue</button> <button ng-click="main.return()" type="submit" class="btn btn-primary pull-right margin-right-10">Return</button> </formly-form> </form> </div> <button class="btn btn-primary pull-right" ng-click="main.updateTaskData()" ng-hide="main.fulfillment">Continue</button> <button class="btn btn-primary pull-right margin-right-10" ng-click="main.return()" ng-hide="main.fulfillment">Return</button> </div>'),a.put("views/no_customer.html",'<h2 class="page-heading">No customer found</h2> <div class="container"> <div class="alert alert-info"> <h5>Sorry, we could not find a customer. Please try again</h5> </div> </div>')}]);